[project]
name = "dbscan"
authors = [
    {name = "Yiqiu Wang", email = "yiqiuwang.work@gmail.com"}
]
maintainers = [
    {name = "Anirudh Vegesana", email = "avegesan@cs.stanford.edu"}
]
description = "Theoretically efficient and practical parallel DBSCAN"
readme = "README.md"
keywords = ['cluster', 'clustering', 'density', 'dbscan']
license = {text = "MIT"}
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
    "License :: OSI Approved :: MIT License",
    'Programming Language :: C++',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
]

dynamic = ["version"]

dependencies = [
    "numpy>=2.0.0",
    "scikit-learn>=1.0",
]

requires-python = ">=3.9,<4.0" # Aligns with CIBW_BUILD and NumPy 2.0 support

[project.optional-dependencies]
example = [
    "matplotlib"
]

[project.urls]
homepage = "https://sites.google.com/view/yiqiuwang/dbscan"
repository = "https://github.com/wangyiqiu/dbscan-python"

[build-system]
requires = ["setuptools>=61", "setuptools_scm>=7", "wheel", "numpy>=2.0.0"]

[tool.setuptools_scm]
write_to = "pythonmodule/_version.py"

[tool.cibuildwheel]
# TODO: Update the pypy to the latest version. This is unnecesary for cpython
# because it will be compatible with all newer releases. Changing the versions
# could be convienient in the future, but for now, totally backwards compatible
# wheels work nicely.
#
# Currently, musllinux is left off because Numpy doesn't publish wheels for it
# on PyPI. If you want this package, build it from source. Same for rarer
# architectures, like ppc64le or s390x. You can do this by running the same
# command you run normally:
# pip install dbscan
build = "cp39-* cp310-* cp311-* cp312-*"
skip = "*-win32 *_i686 *-musllinux_*"

# We will only build x86_64 when merged into master to save on compilation
# time.
# [tool.cibuildwheel.macos]
# archs = ["x86_64", "arm64"]

# We will only build aarch64 when merged into master to save on compilation
# time.
# [tool.cibuildwheel.linux]
# archs = ["auto", "aarch64"]
